package task.bigramcount;

import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;

import java.io.IOException;
import org.apache.hadoop.conf.Configured;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.util.Tool;
import org.apache.hadoop.util.ToolRunner;


public class BigramCountDriver extends Configured implements Tool {

	public int run(String args[]) throws IOException {
		
		if(args.length!=2) {
			System.out.println("enter 2 paths");
			System.exit(0);
		}
		
		Job job = Job.getInstance(getConf());
		job.setJobName("BigramCount");
		job.setJarByClass(BigramCountDriver.class);
		
		FileInputFormat.addInputPath(job, new Path(args[0]));
		FileInputFormat.addInputPath(job, new Path(args[1]));
		
		job.setMapperClass(BigramCountMapper.class);
		job.setReducerClass(BigramCountReducer.class);
		
		job.setMapOutputKeyClass(TextPair.class);
		
		job.setOutputKeyClass(Text.class);
		job.setOutputValueClass(IntWritable.class);
		
		if (job.waitForCompletion(true)) {
				return 0;
			}	
			else {
				return 1;
			}
		}
				
			
	}
	
	
	public static void main(String[] args) throws Exception {
		// TODO Auto-generated method stub
		int exitCode = ToolRunner.run(new BigramCountDriver(), args);
		System.exit(exitCode);
		
	}

}
